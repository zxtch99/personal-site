---
import DefaultLayout from '@layouts/DefaultLayout.astro'
import Hero from '@components/Hero.astro'
import Feature from '@components/Feature.astro'
import Counter from '@components/Counter.astro'
import ContentMedia from '@components/ContentMedia.astro'
import ExternalLink from '@components/ExternalLink.astro'
import { Accordion, AccordionItem, Avatar, AvatarGroup, Card } from 'accessible-astro-components'
import { getCollection } from 'astro:content'

// Import images directly for optimization
import projectImage1 from '@assets/images/projects/project-image-1.png'
import projectImage2 from '@assets/images/projects/project-image-2.png'
import projectImage3 from '@assets/images/projects/project-image-3.png'
import projectImage4 from '@assets/images/projects/project-image-4.png'
import projectImage5 from '@assets/images/projects/project-image-5.png'
import projectImage6 from '@assets/images/projects/project-image-6.png'

// Get the latest blog posts for the homepage
const blogPosts = await getCollection('blog')
const latestPosts = blogPosts.slice(0, 3) // Show only the 3 most recent posts

// Get the latest projects for the homepage
const projectPosts = await getCollection('projects')
const latestProjects = projectPosts.slice(0, 3) // Show only the 3 most recent posts

// Create arrays of images for both blog and projects
const blogImages = [projectImage1, projectImage2, projectImage3]
const projectImages = [projectImage4, projectImage5, projectImage6]

// Add images to blog posts
const blogPostsWithImages = latestPosts.map((post, index) => ({
  ...post,
  featuredImage: blogImages[index % blogImages.length],
}))

// Add images to projects
const projectsWithImages = latestProjects.map((project, index) => ({
  ...project,
  featuredImage: projectImages[index % projectImages.length],
}))

--- 
<DefaultLayout title="Home">
  <Hero />

  <section class="my-64">
    <div class="container">
      <div class="mb-16 flex items-center justify-between">
        <h2 class="text-6xl">Latest Blog Posts</h2>
        <a class="button" href="/blog">View all posts</a>
      </div>
      <div class="grid grid-cols-1 gap-6 md:grid-cols-2 lg:grid-cols-3">
        {
          blogPostsWithImages.map((post) => (
            <Card
              imageComponent={post.featuredImage}
              url={`/blog/${post.id}`}
              title={post.data.title}
              footer={`Author: ${post.data.author}`}
            >
              {post.data.description}
            </Card>
          ))
        }
      </div>
    </div>
  </section>

  <ContentMedia imgSrc="/accessible-components.webp">
    <h2>Who am I?</h2>
    <p class="text-2xl">
        I like when things look good and work well. I'm a frontend developer who loves to build things that are both functional and <span class="text-gradient">aesthetically</span> pleasing.
    </p>
  </ContentMedia>

  <section class="my-64">
    <div class="container">
      <div class="mb-16 flex items-center justify-between">
        <h2 class="text-6xl">My Projects</h2>
        <a class="button" href="/portfolio">View all projects</a>
      </div>
      <div class="grid grid-cols-1 gap-6 md:grid-cols-2 lg:grid-cols-3">
        {
          projectsWithImages.map((project) => (
            <Card
              imageComponent={project.featuredImage}
              url={`/portfolio/${project.id}`}
              title={project.data.title}
              footer={`Author: ${project.data.author}`}
            >
              {project.data.description}
            </Card>
          ))
        }
      </div>
    </div>
  </section>

  <ContentMedia imgSrc="/wcag-compliant.webp" reverseImg={true}>
    <h2>A look under the hood.</h2>
    <p class="text-2xl">
      This site is built with Astro, Tailwind, and using the AI based code editor <ExternalLink href="https://www.cursor.com/">Cursor</ExternalLink>. It's based off of the <ExternalLink href="https://accessible-astro.incluud.dev/">Accessible Astro Starter</ExternalLink> theme. This was my first time using any of these tools, so I'm proud of the work I've done so far.
    </p>
  </ContentMedia>

</DefaultLayout>

<style lang="scss" is:global>
  @use '../assets/scss/base/mixins' as *;
  .avatar {
    border: 1px solid var(--border-color-subtle);
    border-radius: var(--radius-md);
    padding: var(--space-s);
  }
  .card {
    h3 {
      margin-block-end: var(--space-xs);
      line-height: 0.75;
    }

    a {
      @include text-decoration(transparent, var(--foreground-color), 4px, 2px);
    }
  }
</style>

